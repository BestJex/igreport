<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyl.igreport.dao.mysql.IgReportJobLogDao">
	
	<resultMap id="XxlJobLog" type="com.lyl.igreport.xxljob.core.model.XxlJobLog" >
		<result column="id" property="id" />

		<result column="job_group" property="jobGroup" />
		<result column="job_id" property="jobId" />

		<result column="executor_address" property="executorAddress" />
		<result column="executor_handler" property="executorHandler" />
	    <result column="executor_param" property="executorParam" />
		<result column="executor_sharding_param" property="executorShardingParam" />
		<result column="executor_fail_retry_count" property="executorFailRetryCount" />
	    
	    <result column="trigger_time" property="triggerTime" />
	    <result column="trigger_code" property="triggerCode" />
	    <result column="trigger_msg" property="triggerMsg" />
	    
	    <result column="handle_time" property="handleTime" />
		<result column="consume_time" property="consumeTime" />

		<result column="handle_code" property="handleCode" />
	    <result column="handle_msg" property="handleMsg" />

		<result column="alarm_status" property="alarmStatus" />
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.job_group,
		t.job_id,
		t.executor_address,
		t.executor_handler,
		t.executor_param,
		t.executor_sharding_param,
		t.executor_fail_retry_count,
		t.trigger_time,
		t.trigger_code,
		t.trigger_msg,
		t.handle_time,
		t.consume_time,
		t.handle_code,
		t.handle_msg,
		t.alarm_status
	</sql>
	
	<select id="pageList" resultMap="XxlJobLog">

		SELECT <include refid="Base_Column_List" />
		FROM igreport_job_log AS t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobId==0 and jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND t.job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != ''">
				AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != ''">
				AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND t.handle_code = 200
			</if>
			<if test="logStatus == 2" >
				AND (
				t.trigger_code NOT IN (0, 200) OR
				t.handle_code NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND t.trigger_code = 200
				AND t.handle_code = 0
			</if>
		</trim>
		AND job_id IN(SELECT id FROM igreport_job_info <if test="authorName!='admin'">
		where author = #{authorName}
	</if>)
		ORDER BY t.trigger_time DESC
		LIMIT #{offset}, #{pagesize}
	</select>
	
	<select id="pageListCount" resultType="int">
		SELECT count(1)
		FROM (	SELECT <include refid="Base_Column_List" />
		FROM igreport_job_log AS t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobId==0 and jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND t.job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != ''">
				AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != ''">
				AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND t.handle_code = 200
			</if>
			<if test="logStatus == 2" >
				AND (
				t.trigger_code NOT IN (0, 200) OR
				t.handle_code NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND t.trigger_code = 200
				AND t.handle_code = 0
			</if>
		</trim>
		AND job_id IN(SELECT id FROM igreport_job_info <if test="authorName!='admin'">
		where author = #{authorName}
	</if>)
	)tmp
	</select>
	
	<select id="load" parameterType="java.lang.Long" resultMap="XxlJobLog">
		SELECT <include refid="Base_Column_List" />
		FROM igreport_job_log AS t
		WHERE t.id = #{id}
	</select>

	
	<insert id="save" parameterType="com.lyl.igreport.xxljob.core.model.XxlJobLog" useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO igreport_job_log (
			`job_group`,
			`job_id`,
			`trigger_time`,
			`trigger_code`,
			`handle_code`
		) VALUES (
			#{jobGroup},
			#{jobId},
			#{triggerTime},
			#{triggerCode},
			#{handleCode}
		);
		<!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() 
		</selectKey>-->
	</insert>

	<update id="updateTriggerInfo" >
		UPDATE igreport_job_log
		SET
			`trigger_time`= #{triggerTime},
			`trigger_code`= #{triggerCode},
			`trigger_msg`= #{triggerMsg},
			`executor_address`= #{executorAddress},
			`executor_handler`=#{executorHandler},
			`executor_param`= #{executorParam},
			`executor_sharding_param`= #{executorShardingParam},
			`executor_fail_retry_count`= #{executorFailRetryCount}
		WHERE `id`= #{id}
	</update>

	<update id="updateHandleInfo">
		UPDATE igreport_job_log
		SET 
			`handle_time`= #{handleTime},
			`consume_time`= #{consumeTime},
			`handle_code`= #{handleCode},
			`handle_msg`= #{handleMsg} 
		WHERE `id`= #{id}
	</update>


	<update id="updateHandleMsg">
		UPDATE igreport_job_log
		SET
		`handle_msg`= #{handleMsg}
		WHERE `id`= #{id}
	</update>


	<delete id="delete" >
		delete from igreport_job_log
		WHERE job_id = #{jobId}
	</delete>

    <!--<select id="triggerCountByDay" resultType="java.util.Map" >
		SELECT
			DATE_FORMAT(trigger_time,'%Y-%m-%d') triggerDay,
			COUNT(handle_code) triggerDayCount,
			SUM(CASE WHEN (trigger_code in (0, 200) and handle_code = 0) then 1 else 0 end) as triggerDayCountRunning,
			SUM(CASE WHEN handle_code = 200 then 1 else 0 end) as triggerDayCountSuc
		FROM igreport_job_log
		WHERE trigger_time BETWEEN #{from} and #{to}
		GROUP BY triggerDay
		ORDER BY triggerDay
    </select>-->

    <select id="findSevenDayLogReport" resultType="com.lyl.igreport.xxljob.core.model.XxlJobLogReport" >
		SELECT DATE(trigger_time) as triggerDay,
			SUM(CASE WHEN (trigger_code IN (0, 200) AND handle_code = 0) THEN 1 ELSE 0 END) AS runningCount,
			SUM(CASE WHEN handle_code = 200 THEN 1 ELSE 0 END) AS sucCount,
			SUM(CASE WHEN (trigger_code NOT IN (0, 200) OR handle_code NOT IN (0, 200)) THEN 1 ELSE 0 END) AS failCount
		FROM igreport_job_log
		WHERE trigger_time >= DATE_SUB(CURRENT_DATE,INTERVAL 6 DAY)
		GROUP BY DATE(trigger_time)
    </select>

	<select id="findClearLogIds" resultType="long" >
		SELECT id FROM igreport_job_log
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND job_id = #{jobId}
			</if>
			<if test="clearBeforeTime != null">
				AND trigger_time <![CDATA[ <= ]]> #{clearBeforeTime}
			</if>
			<if test="clearBeforeNum gt 0">
				AND id NOT in(
				SELECT id FROM(
				SELECT id FROM igreport_job_log AS t
				<trim prefix="WHERE" prefixOverrides="AND | OR" >
					<if test="jobGroup gt 0">
						AND t.job_group = #{jobGroup}
					</if>
					<if test="jobId gt 0">
						AND t.job_id = #{jobId}
					</if>
				</trim>
				ORDER BY t.trigger_time desc
				LIMIT 0, #{clearBeforeNum}
				) t1
				)
			</if>
		</trim>
		order by id asc
		LIMIT #{pagesize}
	</select>

	<delete id="clearLog" >
		delete from igreport_job_log
		WHERE id in
		<foreach collection="logIds" item="item" open="(" close=")" separator="," >
			#{item}
		</foreach>
	</delete>

	<select id="findFailJobLogIds" resultType="long" >
		SELECT id FROM `igreport_job_log`
		WHERE !(
			(trigger_code in (0, 200) and handle_code = 0)
			OR
			(handle_code = 200)
		)
		AND `alarm_status` = 0
		ORDER BY id ASC
		LIMIT #{pagesize}
	</select>

	<update id="updateAlarmStatus" >
		UPDATE igreport_job_log
		SET
			`alarm_status` = #{newAlarmStatus}
		WHERE `id`= #{logId} AND `alarm_status` = #{oldAlarmStatus}
	</update>



	<select id="queryConsumeTimeDistribute" resultType="java.lang.String">

		SELECT GROUP_CONCAT(tmp.timeWait,'++',tmp.cnt) FROM (
		SELECT CASE WHEN consume_time &lt; 60 THEN '1分钟以内'
		WHEN consume_time &gt;= 60
		AND consume_time &lt; 60*5 THEN '1分钟至5分钟'
		ELSE '5分钟以上' END AS timeWait,
		COUNT(1) AS cnt
		FROM (SELECT consume_time FROM igreport_job_log
		WHERE trigger_time>DATE_SUB(CURRENT_DATE,INTERVAL 7 DAY))igreport_job_log
		GROUP BY CASE WHEN consume_time &lt; 60 THEN '1分钟以内'
		WHEN consume_time &gt;= 60
		AND consume_time &lt; 60*5 THEN '1分钟至5分钟'
		ELSE '5分钟以上' END)tmp

	</select>

	<select id="queryConsumeTimeTop10" resultType="java.lang.String">
	SELECT GROUP_CONCAT(job_info.job_desc,'++',job_log.max_consume_time) FROM

(SELECT job_id,MAX(consume_time) AS max_consume_time FROM igreport_job_log
WHERE trigger_time>DATE_SUB(CURRENT_DATE,INTERVAL 7 DAY)
GROUP BY job_id ORDER BY max_consume_time DESC LIMIT 10)job_log

LEFT JOIN (SELECT id,job_desc FROM igreport_job_info)job_info ON job_log.job_id = job_info.id
	</select>
	
</mapper>